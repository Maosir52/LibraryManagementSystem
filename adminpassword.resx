<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>