<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAB+GwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGzBJREFUeJztnQu8TlXex/847iFJHGYqqZQS0sxIiFzmqAxTyUsURk2l
        hsogKidRqvfV+ExNNQq5jKFMRO+bWzlC5s0kEVGiCym5X47bsWb99/PUnKNj7/08z977v/bev+/n8/3M
        51MN/7X2WuvZe13+iwiEnfLa+trrtH20g7RPa8drZ2uXatdrNyXdlfSAViU9UOif//DfrdO+q52lfVn7
        VPLP5r/j2uTfWT6A8gEQe0prL9V21z6u/bt2hXY7/acTS8kxvKedloytWzLW0r7UBAARh39VW2gHaidp
        V2mPkHxHT9UjydgnJcvSgvDGAMBPqKHtqM3VLtDmk3zn9ctj2pXasdpbtWdnXn0AhIssbXPtaEp0hhMk
        3zEl5fmGFykxCJbNoF4BMJafae/SvkFFJ99gUfdTYtLxTm3ttGoaAEM4kxKvufxaX0DynStscp3xCkZ/
        ba0U6x4AEbjT99PmETq914PBO5R4i6rm+mkAEBBNKPEde4jkO0vUPaydoW2rLeHm4QDgBzW1g7Wfknyn
        iKtc97nan9s/KgC8o7F2ivYoyXcAmJCfxWRtI5vnBkBG8NLdHMKynenyxCEvKeLzAGQMr9n31n5M8g0b
        puYa7W3JZwhASpTUdtFuIPmGDDNzs/YObSkCwAF+beTXxw9JvuFCb+XTjbwvoyQBUAw52tUk31Chv/IB
        pfYEQJILKLGuLN0wYbDyDk3OaQBiyumUOJDDG0ukGyOUkZcP+WRiFQKxgb/zb9fuIPkGCM3wW0qs9mDp
        MOLU1S4k+QYHzXSJth6ByMFrwXyqDEdxoZN8niNXW4ZAJOCDOljWg6n6gfZyAqGF13v5Vz+M+fSgGXIK
        s1zCJqLQwbnm+Ey+dAOC0XC59jwCoYC38HJ+e+lGA6PlXm0PAsZSkRLHdKUbCoy2E7UVCBjF+dqPSL5x
        wHjIW8Z5SRkYAF9ThVd+GLT8SdCZgBi8a4tTciH5JpSSk8PwdnKcMAwY/t7nHPvSDQBClu8y4DYJAiCb
        EjfqSD90CAvLm834AhjgI5dot5D8w4awOL/WNiTgC220e0j+IUNo5z5KJJcBHtKdkIYbhkfeft6VgCfw
        2X3M9MOweVz7OwIZcTeh88PwysuEAwikBa/xSz9ACL1wOIGUeIzkHxqEXvooAVcMI/mHBaEfPkjAlntJ
        /iFB6KcPECiWXoSLN2H05TbOK1ugELzOj9l+GBd5iRD7BJK0IuTtg/GTN7a1pZjDVzPtJvmHAaGEnFOg
        AcUUPtW3heQfAoSSbtbWoJjBOdVWkHzlQ2iCfLw9NvkEOHsKknlAWNTXKSaZhUaQfGVDaKIPU8S5nrDc
        B+Gp5L7BSW4jyQWEGX8IneQM15FLOc4THGtIvnIhDIN870CkLh/BjT0QpuZ4igh8n5p0ZUIYRv+LQs7P
        Cbf2QJiuPGd2DoUUXtN8h+QrEcIwu0RbikLIQyRfeRBGwSEUMpoQ0niLWrZsWdWiRQs1aNAgNW7cOLV4
        8WL12Wefqe+//14dOnRIFRQUqF27dqkvv/xSrVq1Ss2YMUONGjVKdenSRdWoUUM8flhE7kuNKSRkaf9F
        8pUWO8844wz1+9//Xi1atEjl5+erTFi/fr166qmnVMOGDcXLBS356rHSFAKGknxlxcpf/epX6tVXX1VH
        jhzJqNOfijVr1qi+fftabxXSZY25fyTDuVB7iOQrKhZeeeWVKi8vz5dOXxzbtm1T/fv3V6VLlxYve0zl
        vnU+GUoJ7SKSr6TIm52drSZNmqROnDgRWOcvzLp161S7du3E6yGmvkOJvmYcnOhQunIib6dOnayJPBPg
        QahixYridRJDe5NhnK7dQfIVE1mzsrLUs88+K93nf8LatWvVBRdcIF4/MfNbbRUyiGdIvlIiK//Kzp07
        V7qvn5KdO3daS47S9RQznyJDuIiw5u+bp59+ulq5cmVaHZPX+99++201fPhwdcMNN6gGDRpYS4XlypVT
        JUuWVFWrVlXnnnuuatOmjerXr5+aOnWq2rp1a9p/V4cOHcTrK0ZyJm2edBfnf0m+MiLpaaedppYvX55y
        Z+RO37NnT1WpUqWU/84SJUqoq666Sv3lL39R+/fvT3kQuPrqq8XrLUbOJmHaknwlRNJSpUqp+fPnp9QB
        58yZo5o0aeJZDPy2wG8PBw4ccB3D3r17rTcN6fqLkb8mIXgp4kMXAcI0fOKJJ1x3us2bN6ucnBzfYqld
        u7a10cgtGzduVFWqVBGvw5jIu25FlgVvTiNY6MKOHTu6XuOfPn16YJ2td+/e6uDBg67imjlzpng9xsjf
        UsDw8cR1HgQOT7Jy5crq66+/dtXJxo4da32zBxnfL37xC7V9+3ZX8fHBIun6jIlrKeCU4j19KATUPvfc
        c6461wMPPCAWY7169VwNArx1mFcxpOs0JgZ22Sj/+n8SQIFiJ3es48ePO3asESNGiMfKpwR5ws8JnsuQ
        jjUmbqDESVzf6S1QuFg4ZcoUxw7FM/1Bv/afSt6W7DRXwSsI1atXF481JnL+TV/h2caPDSho5DzvvPMc
        f/2/+eYba/OOdKyFff755x0Hrccee0w8zpj4Efm8InCdAYWMpCNHjnTsSF27dhWP82R5BcJp9yBPavK+
        BulYY2J78pG3DShg5ORtuV988YVtJ+LtwKa8+p/snXfe6Th4+blPARZxHvlEQ+0JAwoYOZs3b+7Yga6/
        /nrxOE9lmTJlrNyCdkyYMEE8zhjZiHxgqgEFi6S5ubm2neerr74y/hXaqQz8GSAdY4x8hTymJuHEn28u
        XbrUtvPw/IB0jE7WqVPHtgzMxRdfLB5nTOSTgmeRhzxoQKEiKX//O22vbdasmXicbuRMwnb06NFDPMYY
        6VkCUV5W+NSAAkVSp19OXkfnbEDScbrRaRcj3zsgHWOM5I1BniwJtjGgMJGVk2jYwbP/0jG61Wk14LXX
        XhOPMWa2JA/4uwEFiay33nqrbaeZNm2aeIxuveaaa2zLsmTJEvEYY+ZkypBq2sMGFCSyciouOzgRqHSM
        bm3UqJFtWfgKMukYY2a+tiplwD0GFCLSDh482LbTjB49WjxGt9atW9e2LHw3oXSMMfQOyoA8AwoQae+7
        7z7bTjNmzBjxGN1av35927J8/PHH4jHG0IWUJtna4wYUINLynXt2vPTSS+IxurVp06a2ZVmxYoV4jDGU
        +3ANSoP+BgQfeTlrjh0LFiwQj9GtfFjJjnnz5onHGFPvpjRYZkDgkffyyy+37TS8DVg6RrdyBmE7ONW4
        dIwxdTGlyM+0BQYEHnn51h+npBp8eYd0nG50SmN+7733iscYU7kv16IUuNuAoGPjpk2bbDtOnz59xGN0
        snz58tbFIHbwPgHpOGNsSqsBbxgQcGx8+eWXbTtOGL6dnb7/8/PzrUFCOs4Y+w9ySRntfgMCjo3dunWz
        7TwFBQXqnHPOEY/Tzrfeesu2DAsXLhSPMebuo0TfdgTXfQVstWrV1JEjR2w7kMk7Anki02keY8CAAeJx
        QmpFLvgfAwKNnXyTjh2HDx829i3gzTfftI396NGj6qyzzhKPE9KT5AJk/RWQU345MXfuXPE4T/bGG290
        jHvWrFnicUJLzhpsSw0DgoylnPLLKaEGw/fzScf6gzVr1rRSlTvRsmVL8VihJef0tM0UdKMBQcbW7t27
        O3YmXmrjU3fSsZYuXVrl5eU5xrto0SLxWGERO5ENYwwIMLbyW8BHH33k2Kn4zr3zzz9fLE5OYzZ16lTH
        OHli8MorrxSvV1jEp8iGfxoQYKzl/H+87OfEli1brLsEg46Pf/knTpzoGB/z4osvitcn/Im8xb9YylMi
        m6h0gLHX7Q3BO3fuVK1atQosrjPOOMNxu+8P8NwAbgY2Uk7wU46KoaUBwUFthQoV1OrVq111NL5PkO/e
        419mP2Pigcbp8o8fOHbsmGrdurV4PcJTehUVw0ADAoNJ+Rt/z549rjocs27dOtW+fXvP46hVq5aaNGmS
        40afwgwaNEi8/qCt91MxTDYgMFhIPjzDe+hTYdmyZapz584ZpxK/6KKL1AsvvJDy3z9u3Dhj7zCEPzqR
        imG1AYHBk+zYsaO1ky5VvvvuO+v8PQ8G/O3u9PfwgMEZfYYMGWKlIk+H6dOnG3+FGbT8F51EacIEoLHy
        LkG+ICRd+PWdv995TZ6X73h2ns8W8IWds2fPVmvXrrW2GmcC/1l+z0NAz+SJwCwqRAMDgoI2XnHFFa52
        3QUNDy6cCQiv/aGzPhXiFgMCgg7ygRqngzdBwp8ZJl9bDm3tSoV43ICAoAv5l/b+++/P6JPAC/jTgc8C
        SNcHTNvHqBC4/itk1q5d2/qeT2V5zgs++eQTlZOTI15+mLFTqRDYAhxSL7vsMmudnjff+AmfUeB7DDHR
        FxmLbAn+1oCAYAaeffbZatiwYdbtO16xe/duK18h70fAJF/k3EZJKlLinLB0QNAj+YouTsHN13HzvQJu
        2b9/v1q6dKkaOXKkateunSpbtqx4WaBvcp+3zgRcYkAw0EdPO+001bhxY/Wb3/zGyjlwxx13WLcSc3IR
        vpmoRYsW1pZf6Thh4NbT0rUGBAIhDN4cLfU1IBAIYfD21tIQAwKBEAbvH7X0tAGBQAiDd7SWxhsQCIQw
        eMdpabYBgUAIg9e6L3CZAYFACIN3iRY3AUEYU9doaZMBgUAIg3ejlr4yIBAIYfB+ocVBIAhj6jda2mNA
        IBDC4N2lpUMGBAIhDN6DWjpuQCAQwuDlvo8BAMKYag0A+ASAMJ5anwCYBAy55cqVs67yatmypbr55put
        bEB8YSin85oxY4aaO3euWrBggVq8eLF16w+7Zs0a63/fe+8969+x/N9OmTJFjRkzxrrfj3MAdujQQTVs
        2NBKSS5dTui51iQglgFDIl+33aZNG3XXXXepsWPHqrfeektt3rxZFRQUeJYH0I5du3apFStWWLcAPfjg
        g+qGG26wLjGVrheYttYyIDYCGSjfsXfJJZdYv8Lc2fnXOqiOnip79+613iByc3Otuwzd3EUIjdDaCISt
        wIZ45plnWjn6OM03/9qGFR6oeMAaPXq0at68uSpZsqR43cJitbYC4zCQoPXq1bPu1nv//feN/YXPFL7T
        cPz48eq6667L+Npy6KnWYaClBgQSK6tWrWpl5uUU3EHf7CPNzp07rduJ+c1A+jlAytPSLAMCiYV8wcas
        WbPU0aNHpfuhEfAlJn/4wx+stOXSzyamztTSywYEEln5Ki3+rufZc1A8PInIE518u5H084qZf9XSkwYE
        Ejl5bZ5v8d26dWsgnWj79u1q+fLl1q29/Ir96KOPqnvuucfaF3Dttdeqtm3bWvsEmjRpYnnppZda/9u0
        aVPr37E8UPXq1UsNHTpU/elPf1J/+9vfrL0DfCFoEG8t/HdMnjwZS4vBybeC0yADAomMPOPds2dPtWXL
        Fl86CXd07uSPP/64tUT4y1/+0tof4He5+E2GJyw7depkbRLiST3eTOTHxCUPBH/+85+x+ch/H9DS7wwI
        JBLyfXqrVq3yrCPwBOEHH3xgvR7zlV516tQRL+PJVq5c2dqc9NBDD1k7Dvl+Qa/Yt2+fevjhh1WFChXE
        yxlRe2lxNVim8i8wv3Z7wYEDB9ScOXOsVYLatWuLly1VeZmPZ/h5DwDvBfCCzz//3BpkpMsWQa2rweob
        EEhovemmm6zX8kzgX81XXnnF+g6P2jp53bp11SOPPKI2bNiQUR3x29Bzzz2nKlWqJF6mCGldDlqecD14
        ylapUkW9+uqrGTXo+fPnqx49eqiKFSuKlycIecKRv+13796ddr3x3Ar2EHjij9eDMzgQlIIXXnihWrdu
        XVoN+PDhw9ZWX56Fly6HlLzuz584vLqQDseOHVODBw8WL0fI3UqFWGFAQKGwc+fO1uRUqvCvHh+Wwcz2
        f+QDT/wJle5cAa9E8HKrdDlCKl8I9CN/NyAg4+UjsKlu3eVffD5fX61aNfH4TbVEiRKqW7duatOmTSkP
        ArzBCqcP03IKFWKUAQEZLW+sSZVp06YZuXRnqmXKlFH9+/dPeY6Al175JKV0/CFzBBWimwEBGeuIESNS
        apDbtm2zPhWk4w6rNWvWVDNnzkypznlOJjs7Wzz2ENmFCnGpAQEZ6ahRo1w3Qv484P0AvEIgHXcU5M+C
        HTt2uK7/tWvX4nPAvRdRIbK0hw0IyihvueUW142P1/J5Qks65qhZq1YtK2+hWxYuXBi5vRQ+mK8tRSex
        yoDAjLFRo0bq4MGDrhrdp59+GutlPb8tW7asGjdunOtB4OmnnxaP2XBXUjG8YkBgRli9enXXh3ny8vKs
        BB/SMcfBAQMGuF6F4bc36XgNdjwVw0ADAjNCTo/ttvMjmUWw3n777a5OIPJejTCepQjI+6kYWhgQmLjt
        27d31fk5Cy5OqcnYt29fV4PA9OnTxWM11GZUDGUp5hOB/K3pZnsqLznxMVjpeOMsHxN2AydDkY7VMLmP
        /3gG4GTeMyBAMflMuxOc1JJPuEnHGnd596CbvQIbN27EqkBR3yUb/tuAAEXkPeXfffedbWPiCaicnBzx
        WGFCnn9Zv3694yDAqc6kYzXI0WTDbw0IUMTevXs7NiQ+xScdJyxqixYtHFcGlixZIh6nQXYkG84yIEAR
        +WIOO/bs2YOtpobKA7MTV1xxhXicBsg5AKqTA2sNCDRQuXE4MXDgQPE4YfHy2QE+dWnHCy+8IB6nAX5I
        LnjagEADddiwYbaNh3cEYo+52U6cONH2GfJRY+kYDfAJckEbAwINVN4/bgfnopOOEdrbuHFj22fInHvu
        ueJxCns1uaCMdp8BwQYir/0fOnTItuHwRJN0nNBZpz0cffr0EY9R0L3a0uSS2QYEHIjNmjWzbTScppsT
        VUjHCZ19/vnnbZ/lhAkTxGMU1LoH0C13GRBwIPIasR3z5s0TjxG6k69Bs4NvY5aOUdDbKQVqawsMCNp3
        7777bttG8+yzz4rHCN1Zv35922f55ZdfiscoJPflbEqRdw0I3Hc5U68dw4cPF48RupPPZ9jBtxBLxyjk
        25QG9xoQuO/yL7wd/fr1E48RupPTjNtx/Phx8RiFvJPSoKb2uAHB+6rTnX58gYV0jNC9TkjHJyD3Yd7h
        mxbvGFAAX8UAEC0xAPzE+ZQBkV8NwAAQLTEA/MTfUQZUo0QGUelC+CYGgGiJAaCIh7RVKUOmGVAQ38QA
        EC0xABSRE/1mzDUGFMQ3MQBESwwAReQ8nxlTQrvRgML4IgaAaIkB4Ec3UKLvesIQAwrkixgAoiUGgB/l
        NP+eUUN71IBCeS4GgGiJAcDyCGWw9n8qJhtQMM/FABAtMQBYTiAfuIwSOcWkC+epGACiJQYAy4bkEwsM
        KJynYgCIlhgA6P/IR3IMKKCnYgCIlhgArJR+vvKhAYX0TAwA0TLmA8Bq8nDp71TcZkBBPRMDQLSM+QDQ
        nQKglPYTgcL5IgaAaBnjAYA3/nDfDIRbAihQIGIAiJYxHgC6UICUpMT3hnShMxYDQLSM6QCwhhJ9MlBu
        8iBwcTEARMuYDgCdSACebVyVRrBGiQEgWsZwAFhJAcz8n4rQXyOGASBaxnAAaEfCvEHylZC2GACiZcwG
        gJRu+/GLutrDJF8ZaYkBIFrGaADgE38XkCGE9krxZ555xrHRgGjA9zxKtzcPfdyxVwZIJe03JF8pKdur
        Vy/pdgkC4t133xVvbx65XVvZsVcGTG+Sr5iUbdCggXS7BAHBb3vS7c0je7roj4HDSxGhOy6clZXleK88
        CD8nTpxQrVu3Fm9vHvg2CS77OVFHe4DkKyklmzZtat0bB6ILT/ZKtzMPPEiJSXejGUzyFZWyI0eOlG6j
        wCc2btxo3Rws3cY88AE3HVCaLErsTpKurJTt0qWL2rFjh3R7BR4yY8YMVbVqVfG25YGrkn0rFFxOIc0i
        nJ2drYYOHapmzZqltm3bJt1+QYrk5+erZcuWWRN+bdq0EW9PHslr/r7l+fOLoSRfcRBGwUEUQvh4Is9Y
        SlcehGE2jwJM9OE1P9PuJPlKhDCM7taeTSEnEnkDIBSwK0WEiSRfmRCGyb9ShCin/RfJVyqEYZCX/MpT
        xDhH+z3JVy6EJstzZryjNpJw9pLjJF/JEJpoASVu34o0w0m+oiE00QcpBvD+gFkkX9kQmuRrZPApP6/h
        CY73SL7SITTB97UVKWZU135G8pUPoaSfa2tQTLlYu4vkHwKEEvKM/0UUc66mEGcVhjBN+bQs36sBKLHl
        EcuDMC5yW+ct8qAQt1FiHVT64UDopye0fQkUSz+Sf0AQ+ul9BGzhCpJ+SBD64RACrniU5B8WhF6aSyAl
        QpldGMJifIRAWtxJmBiE4ZUn/PoTyIhbtMdI/mFCmIq81MfX5QEP4H0CnBpZ+qFC6Ebe2IZ1fo+5SruD
        5B8uhHby1vZWBHzhfO1Gkn/IEBYnH+yJ/d5+vzlTu5TkHzaEhf0nxfhUX9BU0P6D5B86hCwn84hcEk/T
        4ewpvFcAh4iglLzMN5oSWa6AEK2135J8Y4DxkjNc/5qAEfxc+/8k3yhgPPyAIpy6O6zwN9h4km8cMNry
        jT180Q0wlBsJF5JC792j7UYgFPAnwTsk32hgNORr7vmmaxAieJWAD2JgCzFMVz6DkkuY5Q81jQkXk8LU
        5Vz9DQlEgixKvA3sJ/mGBc32ECX2l5QiEDnO084n+UYGzXSx9kICkYbnBvic9naSb3DQDL/R3kogVvBd
        bLnafJJvgFBGvpxjrLYygdjCR4xnkHxjhME6R1uXAEjSlrBaEAd5dv8aAuAU8EDAe72lGyr01rXaLpSY
        AwLAFm4kHbWrSb7hwsxcR4kJPizrgZThRtODMBCE0VXa7oRdfMAjmlNi4oiTQEg3bnhqOV0cv73hVR/4
        wmXaVwhnDEySn8VEbYNTPzYAvKWq9g7tGpLvAHF1AyW27Z7l8KwA8JUm2he1B0i+U0RdvnSD923wag1e
        84FR/PBWsJCQrNRLuS4XaPtqT3f9NAAQpBollp944hB3G6YuXwrLE3p8irNminUPgFHUosSbAd9lsI/k
        O5ep7tXO1N6uzU6rpgEwnNKUSGX+JGF/AfshJXLrt0rWDQCxgk+i8YRWLiW+c6N8OpE/hVZS4gQeb8ut
        nnn1ARAtOOU0bzq6nxJr23xAiWe+pTtvquYnY5+QLAvf7lzWu2oCID5wSrOLtV21j2mnapdpt5F8R9+W
        jGWKdoT25mSsWb7UBACgCPzGwFdSd6BEpqOBlPimfkn7unYJJTYrbUq6gxJ32BfOj7g/+c92FPrv1iT/
        v68n/6wnkn92L21O8u/EBRkh598/SmP0xilBeAAAAABJRU5ErkJggg==
</value>
  </data>
</root>